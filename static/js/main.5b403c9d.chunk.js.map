{"version":3,"sources":["App.tsx","components/Good/Good.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","Good","good","GoodsList","visibleGoods","map","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","canReset","className","type","classNames","onClick","reversed","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC7B,oBAAI,UAAQ,OAAZ,SACGA,KCDQC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAClC,6BACGA,EAAaC,KAAI,SAAAH,GAAI,OACpB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,SFJhBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA6BE,IAAMO,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASR,EAASW,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAaMT,EAtCR,SACEU,EACAF,EACAH,GAEA,IAAML,EAAY,YAAOU,GAezB,OAbAV,EAAaW,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKZ,EAASkB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAINZ,EAAaL,EAAakB,UAAYlB,EAkBxBmB,CACnBjB,EACAM,EACAH,GAGIe,EAAWZ,IAAaZ,EAASW,MAAQF,EAE/C,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAaZ,EAASkB,WAEtCU,QA7BmB,kBAAMf,EAAYb,EAASkB,WAsBhD,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAaZ,EAASoB,SAEtCQ,QAvCiB,kBAAMf,EAAYb,EAASoB,SAgC9C,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QAjDc,kBAAMlB,GAAc,SAAAmB,GAAQ,OAAKA,MA0CjD,qBAYCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAxDU,WAClBf,EAAYb,EAASW,MACrBD,GAAc,IAmDR,sBAUJ,cAAC,EAAD,CAAWN,aAAcA,QGtH/B0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b403c9d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleAlphabetSort = () => setSortType(SortType.ALPHABET);\n\n  const handleLengthSort = () => setSortType(SortType.LENGTH);\n\n  const handleReverse = () => setIsReversed(reversed => !reversed);\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const canReset = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handleAlphabetSort}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={handleLengthSort}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {canReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const Good: FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { FC } from 'react';\nimport { Good } from '../Good/Good';\n\ntype Props = {\n  visibleGoods: string[],\n};\n\nexport const GoodsList: FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map(good => (\n      <Good good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}